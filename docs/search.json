[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "ST558 Final Project EDA - Lee Worthington",
    "section": "",
    "text": "Setup environment\n\n# load libraries\nlibrary(tidyverse)\nlibrary(GGally)\nlibrary(caret)\nlibrary(corrplot)\nlibrary(reshape2)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(scales)\nlibrary(knitr)  # For rendering tables in Quarto\n\n# set seed\nset.seed(1)  \n\n\n\nLoad df\n\n# Read in the data https://www.kaggle.com/datasets/alexteboul/diabetes-health-indicators-dataset/\ninput_data <- read_csv(\n  'diabetes_binary_health_indicators_BRFSS2015.csv',\n  show_col_types = FALSE\n)\n\n\n\nData Prep\n\n# Data cleanup\ndf <- input_data |>\n  mutate(\n    Diabetes_binary = factor(Diabetes_binary, levels = c(0, 1, 2), labels = c(\"No\", \"Pre\", \"Yes\")),\n    \n    HighBP = factor(HighBP, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    HighChol = factor(HighChol, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    CholCheck = factor(CholCheck, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    Smoker = factor(Smoker, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    Stroke = factor(Stroke, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    HeartDiseaseorAttack = factor(HeartDiseaseorAttack, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    PhysActivity = factor(PhysActivity, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    Fruits = factor(Fruits, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    Veggies = factor(Veggies, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    HvyAlcoholConsump = factor(HvyAlcoholConsump, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    AnyHealthcare = factor(AnyHealthcare, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    NoDocbcCost = factor(NoDocbcCost, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    GenHlth = factor(GenHlth, levels = c(1, 2, 3, 4, 5), labels = c(\"Exc\", \"VGood\", \"Good\", \"Fair\", \"Poor\")),\n    \n    DiffWalk = factor(DiffWalk, levels = c(0, 1), labels = c(\"N\", \"Y\")),\n    \n    Sex = factor(Sex, levels = c(0, 1), labels = c(\"F\", \"M\")),\n    \n    Age = factor(\n      Age, \n      levels = 1:13, \n      labels = c(\"18-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\", \"80+\")\n    ),\n    \n    Education = factor(\n      Education, \n      levels = 1:6, \n      labels = c(\n        \"None/Kinder\", \"Elem\", \"Some HS\", \n        \"HS Grad\", \"Some College\", \"College Grad\"\n      )\n    ),\n    \n    Income = factor(\n      Income, \n      levels = 1:8, \n      labels = c(\n        \"<$10k\", \"$10-15k\", \"$15-20k\", \"$20-25k\", \n        \"$25-35k\", \"$35-50k\", \"$50-75k\", \">$75k\"\n      )\n    )\n  )\n\n# Summary\nsummary(df)\n\n Diabetes_binary HighBP     HighChol   CholCheck       BMI        Smoker    \n No :218334      N:144851   N:146089   N:  9470   Min.   :12.00   N:141257  \n Pre: 35346      Y:108829   Y:107591   Y:244210   1st Qu.:24.00   Y:112423  \n Yes:     0                                       Median :27.00             \n                                                  Mean   :28.38             \n                                                  3rd Qu.:31.00             \n                                                  Max.   :98.00             \n                                                                            \n Stroke     HeartDiseaseorAttack PhysActivity Fruits     Veggies   \n N:243388   N:229787             N: 61760     N: 92782   N: 47839  \n Y: 10292   Y: 23893             Y:191920     Y:160898   Y:205841  \n                                                                   \n                                                                   \n                                                                   \n                                                                   \n                                                                   \n HvyAlcoholConsump AnyHealthcare NoDocbcCost  GenHlth         MentHlth     \n N:239424          N: 12417      N:232326    Exc  :45299   Min.   : 0.000  \n Y: 14256          Y:241263      Y: 21354    VGood:89084   1st Qu.: 0.000  \n                                             Good :75646   Median : 0.000  \n                                             Fair :31570   Mean   : 3.185  \n                                             Poor :12081   3rd Qu.: 2.000  \n                                                           Max.   :30.000  \n                                                                           \n    PhysHlth      DiffWalk   Sex             Age               Education     \n Min.   : 0.000   N:211005   F:141974   60-64  :33244   None/Kinder :   174  \n 1st Qu.: 0.000   Y: 42675   M:111706   65-69  :32194   Elem        :  4043  \n Median : 0.000                         55-59  :30832   Some HS     :  9478  \n Mean   : 4.242                         50-54  :26314   HS Grad     : 62750  \n 3rd Qu.: 3.000                         70-74  :23533   Some College: 69910  \n Max.   :30.000                         45-49  :19819   College Grad:107325  \n                                        (Other):87744                        \n     Income     \n >$75k  :90385  \n $50-75k:43219  \n $35-50k:36470  \n $25-35k:25883  \n $20-25k:20135  \n $15-20k:15994  \n (Other):21594  \n\n\n\nBased on the dataset descriptions and the data, these are the variables and types (which iâ€™ve gone back and assigned above):\n\nDiabetes_binary: Indicator of diabetes status (0: No diabetes, 1: Prediabetes, 2: Diabetes) - Factor\nHighBP: High blood pressure (0: No, 1: Yes) - Factor\nHighChol: High cholesterol (0: No, 1: Yes) - Factor\nCholCheck: Cholesterol check within the past five years (0: No, 1: Yes) - Factor\nBMI: Body mass index - Numeric\nSmoker: Smoker status (0: No, 1: Yes) - Factor\nStroke: History of stroke (0: No, 1: Yes) - Factor\nHeartDiseaseorAttack: Coronary heart disease or myocardial infarction (0: No, 1: Yes) - Factor\nPhysActivity: Physical activity in past 30 days (0: No, 1: Yes) - Factor\nFruits: Consumption of fruits at least once per day (0: No, 1: Yes) - Factor\nVeggies: Consumption of vegetables at least once per day (0: No, 1: Yes) - Factor\nHvyAlcoholConsump: Heavy alcohol consumption (0: No, 1: Yes) - Factor\nAnyHealthcare: Access to healthcare coverage (0: No, 1: Yes) - Factor\nNoDocbcCost: Inability to see a doctor due to cost (0: No, 1: Yes) - Factor\nGenHlth: General health status (1: Excellent, 2: Very good, 3: Good, 4: Fair, 5: Poor) - Factor with 5 levels\nMentHlth: Days in the past 30 days when mental health was not good - Numeric\nPhysHlth: Days in the past 30 days when physical health was not good - Numeric\nDiffWalk: Difficulty walking or climbing stairs (0: No, 1: Yes) - Factor\nSex: Gender (0: Female, 1: Male) - Factor with 2 levels\nAge: Age categories (1: 18-24, 2: 25-29, 3: 30-34, 4: 35-39, 5: 40-44, 6: 45-49, 7: 50-54, 8: 55-59, 9: 60-64, 10: 65-69, 11: 70-74, 12: 75-79, 13: 80 or older) - Factor with 13 levels\nEducation: Education level (1: Never attended school or only kindergarten, 2: Grades 1 through 8 (Elementary), 3: Grades 9 through 11 (Some high school), 4: Grade 12 or GED (High school graduate), 5: College 1 year to 3 years (Some college or technical school), 6: College 4 years or more (College graduate)) - Factor with 6 levels\nIncome: Income categories (1: Less than $10,000, 2: $10,000 to less than $15,000, 3: $15,000 to less than $20,000, 4: $20,000 to less than $25,000, 5: $25,000 to less than $35,000, 6: $35,000 to less than $50,000, 7: $50,000 to less than $75,000, 8: $75,000 or more) - Factor with 8 levels\n\n\n\n\nEDA\n\n# plot pairs\n#GGally::ggpairs(df, columns = c(1, 2, 3, 4)) \n#GGally::ggpairs(df, columns = c(1, 5, 6, 7))\n#GGally::ggpairs(df, columns = c(1, 8, 9, 10))\n#GGally::ggpairs(df, columns = c(1, 11, 12, 13))\n#GGally::ggpairs(df, columns = c(1, 14, 15, 16))\n#GGally::ggpairs(df, columns = c(1, 17, 18, 19))\n# Mosts of these are ahrd to read and not very informative, use custom plots instead\n\n# Define different variable types\nfactor_vars_heatmap <- c(\n  \"HighBP\", \"HighChol\", \"CholCheck\", \"Smoker\", \"Stroke\", \"HeartDiseaseorAttack\",\n  \"PhysActivity\", \"Fruits\", \"Veggies\", \"HvyAlcoholConsump\", \"AnyHealthcare\",\n  \"NoDocbcCost\", \"DiffWalk\", \"Sex\"\n)\nfactor_vars_histogram <- c(\"GenHlth\", \"Age\", \"Education\", \"Income\")\nnumeric_vars <- c(\"BMI\", \"MentHlth\", \"PhysHlth\")\n\n# Function to generate heatmap for confusion matrix of factor variables\ngenerate_heatmap <- function(var) {\n  confusion <- table(df$Diabetes_binary, df[[var]])\n  confusion_melted <- melt(confusion)\n  confusion_melted$percentage <- confusion_melted$value / sum(confusion_melted$value) * 100\n  confusion_melted$label <- paste(comma(confusion_melted$value), sprintf(\"(%.1f%%)\", confusion_melted$percentage))\n  \n  ggplot(confusion_melted, aes(Var1, Var2, fill = value)) +\n    geom_tile(alpha = 0.5) +\n    geom_text(aes(label = label), color = \"black\") +\n    scale_fill_gradient(low = \"lightgreen\", high = \"darkgreen\") +\n    labs(title = paste(\"Confusion Matrix for\", var),\n         x = \"Diabetes_binary\",\n         y = var,\n         fill = \"Count\") +\n    theme_minimal() +\n    scale_x_discrete(labels = c(\"0\", \"1\")) +\n    scale_y_discrete(labels = c(\"0\", \"1\"))\n}\n\n# Function to generate histogram for numeric variables with log scale on x-axis\ngenerate_histogram_numeric <- function(var) {\n  ggplot(df, aes_string(x = var, fill = \"Diabetes_binary\")) +\n    geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n    #scale_x_log10() +\n    labs(title = paste(\"Histogram of\", var, \"partitioned by Diabetes_binary (Log Scale)\"), x = var, y = \"Count\") +\n    theme_minimal()\n}\n\n# Function to generate boxplot for numeric variables\ngenerate_boxplot_numeric <- function(var) {\n  ggplot(df, aes(x = Diabetes_binary, y = df[[var]], fill = Diabetes_binary)) +\n    geom_boxplot(alpha = 0.5) +\n    scale_y_log10() +\n    labs(title = paste(\"Boxplot of\", var, \"partitioned by Diabetes_binary\"), x = \"Diabetes_binary\", y = var) +\n    theme_minimal()\n}\n\n# Function to generate bar plot for factor variables with more than 3 levels\ngenerate_histogram_factor <- function(var) {\n  df |>\n    group_by(!!sym(var), Diabetes_binary) |>\n    \n    summarise(count = n(), .groups = \"drop\") |>\n    \n    group_by(!!sym(var)) |>\n    \n    mutate(\n      percentage = count / sum(count) * 100,\n      label = paste0(sprintf(\"%.1f\", percentage), \"%\")\n    ) |>\n    \n    ggplot(aes_string(x = var, y = \"count\", fill = \"Diabetes_binary\")) +\n    geom_bar(position = \"stack\", stat = \"identity\", alpha = 0.5) +\n    geom_text(aes(label = label), position = position_stack(vjust = 0.5), color = \"black\") +\n    labs(title = paste(\"Bar Plot of\", var, \"partitioned by Diabetes_binary\"), x = var, y = \"Count\") +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n}\n\n\n\nEDA results\n\n# Generate heatmaps for factor variables with up to 3 levels\nfor (var in factor_vars_heatmap) {\n  print(generate_heatmap(var))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Generate histograms for factor variables with more than 3 levels\nfor (var in factor_vars_histogram) {\n  print(generate_histogram_factor(var))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n# Generate histograms and box-plots for numeric variables with log scale on x-axis\nfor (var in numeric_vars) {\n  print(generate_histogram_numeric(var))\n  print(generate_boxplot_numeric(var))\n}"
  }
]